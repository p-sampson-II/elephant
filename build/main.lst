ARM GAS  /tmp/ccZ3zwRK.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB137:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ3zwRK.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** I2S_HandleTypeDef hi2s2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** UART_HandleTypeDef huart1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** volatile uint8_t state_alrm = 0;
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_I2C1_Init(void);
  61:Core/Src/main.c **** static void MX_I2S2_Init(void);
  62:Core/Src/main.c **** static void MX_SPI1_Init(void);
  63:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  64:Core/Src/main.c **** static void MX_RTC_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccZ3zwRK.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   MX_I2C1_Init();
 103:Core/Src/main.c ****   MX_I2S2_Init();
 104:Core/Src/main.c ****   MX_SPI1_Init();
 105:Core/Src/main.c ****   MX_USART1_UART_Init();
 106:Core/Src/main.c ****   MX_RTC_Init();
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.c ****   /*if(state_alrm) {
 109:Core/Src/main.c ****       state_alrm = 0;
 110:Core/Src/main.c ****       HAL_GPIO_TogglePin(usr_led_GPIO_Port,usr_led_Pin);
 111:Core/Src/main.c ****     } */
 112:Core/Src/main.c ****   
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   
 118:Core/Src/main.c ****   while (1)
 119:Core/Src/main.c ****   {
 120:Core/Src/main.c ****     /* USER CODE END WHILE */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   
 126:Core/Src/main.c ****   /* USER CODE END 3 */
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** /**
 130:Core/Src/main.c ****   * @brief System Clock Configuration
 131:Core/Src/main.c ****   * @retval None
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c **** void SystemClock_Config(void)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 141:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 144:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 145:Core/Src/main.c ****   */
ARM GAS  /tmp/ccZ3zwRK.s 			page 4


 146:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI
 147:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSE;
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 150:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 151:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 158:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 166:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 168:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 173:Core/Src/main.c ****   {
 174:Core/Src/main.c ****     Error_Handler();
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSI, RCC_MCODIV_1);
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 181:Core/Src/main.c ****   * @param None
 182:Core/Src/main.c ****   * @retval None
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c **** static void MX_I2C1_Init(void)
 185:Core/Src/main.c **** {
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 194:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 195:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 196:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 197:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 198:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 199:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 200:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 201:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 202:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  /tmp/ccZ3zwRK.s 			page 5


 203:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** }
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** /**
 214:Core/Src/main.c ****   * @brief I2S2 Initialization Function
 215:Core/Src/main.c ****   * @param None
 216:Core/Src/main.c ****   * @retval None
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c **** static void MX_I2S2_Init(void)
 219:Core/Src/main.c **** {
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE BEGIN I2S2_Init 0 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE END I2S2_Init 0 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN I2S2_Init 1 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END I2S2_Init 1 */
 228:Core/Src/main.c ****   hi2s2.Instance = SPI2;
 229:Core/Src/main.c ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 230:Core/Src/main.c ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 231:Core/Src/main.c ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 232:Core/Src/main.c ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 233:Core/Src/main.c ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
 234:Core/Src/main.c ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 235:Core/Src/main.c ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 236:Core/Src/main.c ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 237:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c ****   /* USER CODE BEGIN I2S2_Init 2 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END I2S2_Init 2 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** }
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief RTC Initialization Function
 249:Core/Src/main.c ****   * @param None
 250:Core/Src/main.c ****   * @retval None
 251:Core/Src/main.c ****   */
 252:Core/Src/main.c **** static void MX_RTC_Init(void)
 253:Core/Src/main.c **** {
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
ARM GAS  /tmp/ccZ3zwRK.s 			page 6


 260:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 261:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /** Initialize RTC Only
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c ****   hrtc.Instance = RTC;
 270:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 271:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 272:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 273:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_ALARMA;
 274:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_LOW;
 275:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_PUSHPULL;
 276:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 277:Core/Src/main.c ****   {
 278:Core/Src/main.c ****     Error_Handler();
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c ****   sTime.Hours = 0x0;
 288:Core/Src/main.c ****   sTime.Minutes = 0x0;
 289:Core/Src/main.c ****   sTime.Seconds = 0x0;
 290:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 291:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 292:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 297:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 298:Core/Src/main.c ****   sDate.Date = 0x1;
 299:Core/Src/main.c ****   sDate.Year = 0x0;
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /** Enable the Alarm A
 307:Core/Src/main.c ****   */
 308:Core/Src/main.c ****   sAlarm.AlarmTime.Hours = 0x0;
 309:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = 0x0;
 310:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = 0x10;
 311:Core/Src/main.c ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 312:Core/Src/main.c ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 313:Core/Src/main.c ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 314:Core/Src/main.c ****   sAlarm.AlarmMask = RTC_ALARMMASK_DATEWEEKDAY|RTC_ALARMMASK_HOURS
 315:Core/Src/main.c ****                               |RTC_ALARMMASK_MINUTES;
 316:Core/Src/main.c ****   sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
ARM GAS  /tmp/ccZ3zwRK.s 			page 7


 317:Core/Src/main.c ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 318:Core/Src/main.c ****   sAlarm.AlarmDateWeekDay = 0x1;
 319:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 320:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 321:Core/Src/main.c ****   {
 322:Core/Src/main.c ****     Error_Handler();
 323:Core/Src/main.c ****   }
 324:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** }
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** /**
 331:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 332:Core/Src/main.c ****   * @param None
 333:Core/Src/main.c ****   * @retval None
 334:Core/Src/main.c ****   */
 335:Core/Src/main.c **** static void MX_SPI1_Init(void)
 336:Core/Src/main.c **** {
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 345:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 346:Core/Src/main.c ****   hspi1.Instance = SPI1;
 347:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 348:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 349:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 350:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 351:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 352:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 353:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 354:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 355:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 356:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 357:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 358:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****   * @brief USART1 Initialization Function
 370:Core/Src/main.c ****   * @param None
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
ARM GAS  /tmp/ccZ3zwRK.s 			page 8


 374:Core/Src/main.c **** {
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 383:Core/Src/main.c ****   huart1.Instance = USART1;
 384:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 385:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 386:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 387:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 388:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 389:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 390:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 391:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 392:Core/Src/main.c ****   {
 393:Core/Src/main.c ****     Error_Handler();
 394:Core/Src/main.c ****   }
 395:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** /**
 402:Core/Src/main.c ****   * @brief GPIO Initialization Function
 403:Core/Src/main.c ****   * @param None
 404:Core/Src/main.c ****   * @retval None
 405:Core/Src/main.c ****   */
 406:Core/Src/main.c **** static void MX_GPIO_Init(void)
 407:Core/Src/main.c **** {
  28              		.loc 1 407 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              		.cfi_def_cfa_offset 64
 408:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 408 3 view .LVU1
  42              		.loc 1 408 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0594     		str	r4, [sp, #20]
  45 0008 0694     		str	r4, [sp, #24]
  46 000a 0794     		str	r4, [sp, #28]
  47 000c 0894     		str	r4, [sp, #32]
  48 000e 0994     		str	r4, [sp, #36]
 409:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  /tmp/ccZ3zwRK.s 			page 9


 410:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 413:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 413 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 413 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 413 3 view .LVU5
  54 0012 2B4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 413 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 413 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 413 3 view .LVU8
 414:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 414 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 414 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 414 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F08002 		orr	r2, r2, #128
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 414 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F08002 		and	r2, r2, #128
  77 0036 0292     		str	r2, [sp, #8]
  78              		.loc 1 414 3 view .LVU13
  79 0038 029A     		ldr	r2, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 414 3 view .LVU14
 415:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  82              		.loc 1 415 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 415 3 view .LVU16
  85 003a 0394     		str	r4, [sp, #12]
  86              		.loc 1 415 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00102 		orr	r2, r2, #1
  89 0042 1A63     		str	r2, [r3, #48]
  90              		.loc 1 415 3 view .LVU18
  91 0044 1A6B     		ldr	r2, [r3, #48]
  92 0046 02F00102 		and	r2, r2, #1
  93 004a 0392     		str	r2, [sp, #12]
  94              		.loc 1 415 3 view .LVU19
  95 004c 039A     		ldr	r2, [sp, #12]
  96              	.LBE6:
  97              		.loc 1 415 3 view .LVU20
 416:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  98              		.loc 1 416 3 view .LVU21
ARM GAS  /tmp/ccZ3zwRK.s 			page 10


  99              	.LBB7:
 100              		.loc 1 416 3 view .LVU22
 101 004e 0494     		str	r4, [sp, #16]
 102              		.loc 1 416 3 view .LVU23
 103 0050 1A6B     		ldr	r2, [r3, #48]
 104 0052 42F00202 		orr	r2, r2, #2
 105 0056 1A63     		str	r2, [r3, #48]
 106              		.loc 1 416 3 view .LVU24
 107 0058 1B6B     		ldr	r3, [r3, #48]
 108 005a 03F00203 		and	r3, r3, #2
 109 005e 0493     		str	r3, [sp, #16]
 110              		.loc 1 416 3 view .LVU25
 111 0060 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 416 3 view .LVU26
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 419:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, ld_heartbeat_Pin|pwr_eeprom_Pin|write_eeprom_Pin, GPIO_PIN_RESET);
 114              		.loc 1 419 3 view .LVU27
 115 0062 184D     		ldr	r5, .L3+4
 116 0064 2246     		mov	r2, r4
 117 0066 1A21     		movs	r1, #26
 118 0068 2846     		mov	r0, r5
 119 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 422:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, hold_eeprom_Pin|pwr_aud_Pin, GPIO_PIN_RESET);
 121              		.loc 1 422 3 view .LVU28
 122 006e 164E     		ldr	r6, .L3+8
 123 0070 2246     		mov	r2, r4
 124 0072 40F20141 		movw	r1, #1025
 125 0076 3046     		mov	r0, r6
 126 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL1:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /*Configure GPIO pins : ld_heartbeat_Pin pwr_eeprom_Pin write_eeprom_Pin */
 425:Core/Src/main.c ****   GPIO_InitStruct.Pin = ld_heartbeat_Pin|pwr_eeprom_Pin|write_eeprom_Pin;
 128              		.loc 1 425 3 view .LVU29
 129              		.loc 1 425 23 is_stmt 0 view .LVU30
 130 007c 1A23     		movs	r3, #26
 131 007e 0593     		str	r3, [sp, #20]
 426:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 426 3 is_stmt 1 view .LVU31
 133              		.loc 1 426 24 is_stmt 0 view .LVU32
 134 0080 0127     		movs	r7, #1
 135 0082 0697     		str	r7, [sp, #24]
 427:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 427 3 is_stmt 1 view .LVU33
 137              		.loc 1 427 24 is_stmt 0 view .LVU34
 138 0084 0794     		str	r4, [sp, #28]
 428:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 428 3 is_stmt 1 view .LVU35
 140              		.loc 1 428 25 is_stmt 0 view .LVU36
 141 0086 0894     		str	r4, [sp, #32]
 429:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 142              		.loc 1 429 3 is_stmt 1 view .LVU37
ARM GAS  /tmp/ccZ3zwRK.s 			page 11


 143 0088 05A9     		add	r1, sp, #20
 144 008a 2846     		mov	r0, r5
 145 008c FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL2:
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /*Configure GPIO pins : hold_eeprom_Pin pwr_aud_Pin */
 432:Core/Src/main.c ****   GPIO_InitStruct.Pin = hold_eeprom_Pin|pwr_aud_Pin;
 147              		.loc 1 432 3 view .LVU38
 148              		.loc 1 432 23 is_stmt 0 view .LVU39
 149 0090 40F20143 		movw	r3, #1025
 150 0094 0593     		str	r3, [sp, #20]
 433:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 151              		.loc 1 433 3 is_stmt 1 view .LVU40
 152              		.loc 1 433 24 is_stmt 0 view .LVU41
 153 0096 0697     		str	r7, [sp, #24]
 434:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 154              		.loc 1 434 3 is_stmt 1 view .LVU42
 155              		.loc 1 434 24 is_stmt 0 view .LVU43
 156 0098 0794     		str	r4, [sp, #28]
 435:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 157              		.loc 1 435 3 is_stmt 1 view .LVU44
 158              		.loc 1 435 25 is_stmt 0 view .LVU45
 159 009a 0894     		str	r4, [sp, #32]
 436:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 160              		.loc 1 436 3 is_stmt 1 view .LVU46
 161 009c 05A9     		add	r1, sp, #20
 162 009e 3046     		mov	r0, r6
 163 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL3:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
 439:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 165              		.loc 1 439 3 view .LVU47
 166              		.loc 1 439 23 is_stmt 0 view .LVU48
 167 00a4 4FF48073 		mov	r3, #256
 168 00a8 0593     		str	r3, [sp, #20]
 440:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 169              		.loc 1 440 3 is_stmt 1 view .LVU49
 170              		.loc 1 440 24 is_stmt 0 view .LVU50
 171 00aa 0223     		movs	r3, #2
 172 00ac 0693     		str	r3, [sp, #24]
 441:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 441 3 is_stmt 1 view .LVU51
 174              		.loc 1 441 24 is_stmt 0 view .LVU52
 175 00ae 0794     		str	r4, [sp, #28]
 442:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 176              		.loc 1 442 3 is_stmt 1 view .LVU53
 177              		.loc 1 442 25 is_stmt 0 view .LVU54
 178 00b0 0894     		str	r4, [sp, #32]
 443:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 179              		.loc 1 443 3 is_stmt 1 view .LVU55
 180              		.loc 1 443 29 is_stmt 0 view .LVU56
 181 00b2 0994     		str	r4, [sp, #36]
 444:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 182              		.loc 1 444 3 is_stmt 1 view .LVU57
 183 00b4 05A9     		add	r1, sp, #20
 184 00b6 2846     		mov	r0, r5
ARM GAS  /tmp/ccZ3zwRK.s 			page 12


 185 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 186              	.LVL4:
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 447:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 448:Core/Src/main.c **** }
 187              		.loc 1 448 1 is_stmt 0 view .LVU58
 188 00bc 0BB0     		add	sp, sp, #44
 189              		.cfi_def_cfa_offset 20
 190              		@ sp needed
 191 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 192              	.L4:
 193              		.align	2
 194              	.L3:
 195 00c0 00380240 		.word	1073887232
 196 00c4 00000240 		.word	1073872896
 197 00c8 00040240 		.word	1073873920
 198              		.cfi_endproc
 199              	.LFE137:
 201              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 202              		.align	1
 203              		.global	HAL_RTC_AlarmAEventCallback
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 208              	HAL_RTC_AlarmAEventCallback:
 209              	.LVL5:
 210              	.LFB138:
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 451:Core/Src/main.c **** void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc) { 
 211              		.loc 1 451 59 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 452:Core/Src/main.c ****   
 453:Core/Src/main.c **** }
 216              		.loc 1 453 1 view .LVU60
 217 0000 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE138:
 221              		.section	.text.Error_Handler,"ax",%progbits
 222              		.align	1
 223              		.global	Error_Handler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	Error_Handler:
 229              	.LFB139:
 454:Core/Src/main.c **** /* USER CODE END 4 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** /**
 457:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 458:Core/Src/main.c ****   * @retval None
 459:Core/Src/main.c ****   */
 460:Core/Src/main.c **** void Error_Handler(void)
ARM GAS  /tmp/ccZ3zwRK.s 			page 13


 461:Core/Src/main.c **** {
 230              		.loc 1 461 1 view -0
 231              		.cfi_startproc
 232              		@ Volatile: function does not return.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 462:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 463:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 464:Core/Src/main.c ****   __disable_irq();
 236              		.loc 1 464 3 view .LVU62
 237              	.LBB8:
 238              	.LBI8:
 239              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/ccZ3zwRK.s 			page 14


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccZ3zwRK.s 			page 15


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 240              		.loc 2 140 27 view .LVU63
 241              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 242              		.loc 2 142 3 view .LVU64
 243              		.syntax unified
 244              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 245 0000 72B6     		cpsid i
 246              	@ 0 "" 2
 247              		.thumb
 248              		.syntax unified
 249              	.L7:
 250              	.LBE9:
 251              	.LBE8:
 465:Core/Src/main.c ****   while (1)
 252              		.loc 1 465 3 view .LVU65
 466:Core/Src/main.c ****   {
ARM GAS  /tmp/ccZ3zwRK.s 			page 16


 467:Core/Src/main.c **** 
 468:Core/Src/main.c ****   }
 253              		.loc 1 468 3 view .LVU66
 465:Core/Src/main.c ****   while (1)
 254              		.loc 1 465 9 view .LVU67
 255 0002 FEE7     		b	.L7
 256              		.cfi_endproc
 257              	.LFE139:
 259              		.section	.text.MX_I2C1_Init,"ax",%progbits
 260              		.align	1
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	MX_I2C1_Init:
 266              	.LFB132:
 185:Core/Src/main.c **** 
 267              		.loc 1 185 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 08B5     		push	{r3, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 194:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 275              		.loc 1 194 3 view .LVU69
 194:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 276              		.loc 1 194 18 is_stmt 0 view .LVU70
 277 0002 0A48     		ldr	r0, .L12
 278 0004 0A4B     		ldr	r3, .L12+4
 279 0006 0360     		str	r3, [r0]
 195:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 280              		.loc 1 195 3 is_stmt 1 view .LVU71
 195:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 281              		.loc 1 195 25 is_stmt 0 view .LVU72
 282 0008 0A4B     		ldr	r3, .L12+8
 283 000a 4360     		str	r3, [r0, #4]
 196:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 284              		.loc 1 196 3 is_stmt 1 view .LVU73
 196:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 285              		.loc 1 196 24 is_stmt 0 view .LVU74
 286 000c 0023     		movs	r3, #0
 287 000e 8360     		str	r3, [r0, #8]
 197:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 288              		.loc 1 197 3 is_stmt 1 view .LVU75
 197:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 289              		.loc 1 197 26 is_stmt 0 view .LVU76
 290 0010 C360     		str	r3, [r0, #12]
 198:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 291              		.loc 1 198 3 is_stmt 1 view .LVU77
 198:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 292              		.loc 1 198 29 is_stmt 0 view .LVU78
 293 0012 4FF48042 		mov	r2, #16384
 294 0016 0261     		str	r2, [r0, #16]
 199:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 295              		.loc 1 199 3 is_stmt 1 view .LVU79
 199:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  /tmp/ccZ3zwRK.s 			page 17


 296              		.loc 1 199 30 is_stmt 0 view .LVU80
 297 0018 4361     		str	r3, [r0, #20]
 200:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 298              		.loc 1 200 3 is_stmt 1 view .LVU81
 200:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 299              		.loc 1 200 26 is_stmt 0 view .LVU82
 300 001a 8361     		str	r3, [r0, #24]
 201:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 301              		.loc 1 201 3 is_stmt 1 view .LVU83
 201:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 302              		.loc 1 201 30 is_stmt 0 view .LVU84
 303 001c C361     		str	r3, [r0, #28]
 202:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 304              		.loc 1 202 3 is_stmt 1 view .LVU85
 202:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 305              		.loc 1 202 28 is_stmt 0 view .LVU86
 306 001e 0362     		str	r3, [r0, #32]
 203:Core/Src/main.c ****   {
 307              		.loc 1 203 3 is_stmt 1 view .LVU87
 203:Core/Src/main.c ****   {
 308              		.loc 1 203 7 is_stmt 0 view .LVU88
 309 0020 FFF7FEFF 		bl	HAL_I2C_Init
 310              	.LVL6:
 203:Core/Src/main.c ****   {
 311              		.loc 1 203 6 discriminator 1 view .LVU89
 312 0024 00B9     		cbnz	r0, .L11
 211:Core/Src/main.c **** 
 313              		.loc 1 211 1 view .LVU90
 314 0026 08BD     		pop	{r3, pc}
 315              	.L11:
 205:Core/Src/main.c ****   }
 316              		.loc 1 205 5 is_stmt 1 view .LVU91
 317 0028 FFF7FEFF 		bl	Error_Handler
 318              	.LVL7:
 319              	.L13:
 320              		.align	2
 321              	.L12:
 322 002c 00000000 		.word	hi2c1
 323 0030 00540040 		.word	1073763328
 324 0034 A0860100 		.word	100000
 325              		.cfi_endproc
 326              	.LFE132:
 328              		.section	.text.MX_I2S2_Init,"ax",%progbits
 329              		.align	1
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 334              	MX_I2S2_Init:
 335              	.LFB133:
 219:Core/Src/main.c **** 
 336              		.loc 1 219 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 08B5     		push	{r3, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 3, -8
ARM GAS  /tmp/ccZ3zwRK.s 			page 18


 343              		.cfi_offset 14, -4
 228:Core/Src/main.c ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 344              		.loc 1 228 3 view .LVU93
 228:Core/Src/main.c ****   hi2s2.Init.Mode = I2S_MODE_MASTER_TX;
 345              		.loc 1 228 18 is_stmt 0 view .LVU94
 346 0002 0B48     		ldr	r0, .L18
 347 0004 0B4B     		ldr	r3, .L18+4
 348 0006 0360     		str	r3, [r0]
 229:Core/Src/main.c ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 349              		.loc 1 229 3 is_stmt 1 view .LVU95
 229:Core/Src/main.c ****   hi2s2.Init.Standard = I2S_STANDARD_PHILIPS;
 350              		.loc 1 229 19 is_stmt 0 view .LVU96
 351 0008 4FF40073 		mov	r3, #512
 352 000c 4360     		str	r3, [r0, #4]
 230:Core/Src/main.c ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 353              		.loc 1 230 3 is_stmt 1 view .LVU97
 230:Core/Src/main.c ****   hi2s2.Init.DataFormat = I2S_DATAFORMAT_16B;
 354              		.loc 1 230 23 is_stmt 0 view .LVU98
 355 000e 0023     		movs	r3, #0
 356 0010 8360     		str	r3, [r0, #8]
 231:Core/Src/main.c ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 357              		.loc 1 231 3 is_stmt 1 view .LVU99
 231:Core/Src/main.c ****   hi2s2.Init.MCLKOutput = I2S_MCLKOUTPUT_DISABLE;
 358              		.loc 1 231 25 is_stmt 0 view .LVU100
 359 0012 C360     		str	r3, [r0, #12]
 232:Core/Src/main.c ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
 360              		.loc 1 232 3 is_stmt 1 view .LVU101
 232:Core/Src/main.c ****   hi2s2.Init.AudioFreq = I2S_AUDIOFREQ_8K;
 361              		.loc 1 232 25 is_stmt 0 view .LVU102
 362 0014 0361     		str	r3, [r0, #16]
 233:Core/Src/main.c ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 363              		.loc 1 233 3 is_stmt 1 view .LVU103
 233:Core/Src/main.c ****   hi2s2.Init.CPOL = I2S_CPOL_LOW;
 364              		.loc 1 233 24 is_stmt 0 view .LVU104
 365 0016 4FF4FA52 		mov	r2, #8000
 366 001a 4261     		str	r2, [r0, #20]
 234:Core/Src/main.c ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 367              		.loc 1 234 3 is_stmt 1 view .LVU105
 234:Core/Src/main.c ****   hi2s2.Init.ClockSource = I2S_CLOCK_PLL;
 368              		.loc 1 234 19 is_stmt 0 view .LVU106
 369 001c 8361     		str	r3, [r0, #24]
 235:Core/Src/main.c ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 370              		.loc 1 235 3 is_stmt 1 view .LVU107
 235:Core/Src/main.c ****   hi2s2.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 371              		.loc 1 235 26 is_stmt 0 view .LVU108
 372 001e C361     		str	r3, [r0, #28]
 236:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 373              		.loc 1 236 3 is_stmt 1 view .LVU109
 236:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s2) != HAL_OK)
 374              		.loc 1 236 29 is_stmt 0 view .LVU110
 375 0020 0362     		str	r3, [r0, #32]
 237:Core/Src/main.c ****   {
 376              		.loc 1 237 3 is_stmt 1 view .LVU111
 237:Core/Src/main.c ****   {
 377              		.loc 1 237 7 is_stmt 0 view .LVU112
 378 0022 FFF7FEFF 		bl	HAL_I2S_Init
 379              	.LVL8:
ARM GAS  /tmp/ccZ3zwRK.s 			page 19


 237:Core/Src/main.c ****   {
 380              		.loc 1 237 6 discriminator 1 view .LVU113
 381 0026 00B9     		cbnz	r0, .L17
 245:Core/Src/main.c **** 
 382              		.loc 1 245 1 view .LVU114
 383 0028 08BD     		pop	{r3, pc}
 384              	.L17:
 239:Core/Src/main.c ****   }
 385              		.loc 1 239 5 is_stmt 1 view .LVU115
 386 002a FFF7FEFF 		bl	Error_Handler
 387              	.LVL9:
 388              	.L19:
 389 002e 00BF     		.align	2
 390              	.L18:
 391 0030 00000000 		.word	hi2s2
 392 0034 00380040 		.word	1073756160
 393              		.cfi_endproc
 394              	.LFE133:
 396              		.section	.text.MX_SPI1_Init,"ax",%progbits
 397              		.align	1
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	MX_SPI1_Init:
 403              	.LFB135:
 336:Core/Src/main.c **** 
 404              		.loc 1 336 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408 0000 08B5     		push	{r3, lr}
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
 346:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 412              		.loc 1 346 3 view .LVU117
 346:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 413              		.loc 1 346 18 is_stmt 0 view .LVU118
 414 0002 0D48     		ldr	r0, .L24
 415 0004 0D4B     		ldr	r3, .L24+4
 416 0006 0360     		str	r3, [r0]
 347:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 417              		.loc 1 347 3 is_stmt 1 view .LVU119
 347:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 418              		.loc 1 347 19 is_stmt 0 view .LVU120
 419 0008 4FF48273 		mov	r3, #260
 420 000c 4360     		str	r3, [r0, #4]
 348:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 421              		.loc 1 348 3 is_stmt 1 view .LVU121
 348:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 422              		.loc 1 348 24 is_stmt 0 view .LVU122
 423 000e 0023     		movs	r3, #0
 424 0010 8360     		str	r3, [r0, #8]
 349:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 425              		.loc 1 349 3 is_stmt 1 view .LVU123
 349:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 426              		.loc 1 349 23 is_stmt 0 view .LVU124
ARM GAS  /tmp/ccZ3zwRK.s 			page 20


 427 0012 C360     		str	r3, [r0, #12]
 350:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 428              		.loc 1 350 3 is_stmt 1 view .LVU125
 350:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 429              		.loc 1 350 26 is_stmt 0 view .LVU126
 430 0014 0361     		str	r3, [r0, #16]
 351:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 431              		.loc 1 351 3 is_stmt 1 view .LVU127
 351:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 432              		.loc 1 351 23 is_stmt 0 view .LVU128
 433 0016 4361     		str	r3, [r0, #20]
 352:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 434              		.loc 1 352 3 is_stmt 1 view .LVU129
 352:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 435              		.loc 1 352 18 is_stmt 0 view .LVU130
 436 0018 4FF40072 		mov	r2, #512
 437 001c 8261     		str	r2, [r0, #24]
 353:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 438              		.loc 1 353 3 is_stmt 1 view .LVU131
 353:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 439              		.loc 1 353 32 is_stmt 0 view .LVU132
 440 001e C361     		str	r3, [r0, #28]
 354:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 441              		.loc 1 354 3 is_stmt 1 view .LVU133
 354:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 442              		.loc 1 354 23 is_stmt 0 view .LVU134
 443 0020 0362     		str	r3, [r0, #32]
 355:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 444              		.loc 1 355 3 is_stmt 1 view .LVU135
 355:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 445              		.loc 1 355 21 is_stmt 0 view .LVU136
 446 0022 4362     		str	r3, [r0, #36]
 356:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 447              		.loc 1 356 3 is_stmt 1 view .LVU137
 356:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 448              		.loc 1 356 29 is_stmt 0 view .LVU138
 449 0024 8362     		str	r3, [r0, #40]
 357:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 450              		.loc 1 357 3 is_stmt 1 view .LVU139
 357:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 451              		.loc 1 357 28 is_stmt 0 view .LVU140
 452 0026 0A23     		movs	r3, #10
 453 0028 C362     		str	r3, [r0, #44]
 358:Core/Src/main.c ****   {
 454              		.loc 1 358 3 is_stmt 1 view .LVU141
 358:Core/Src/main.c ****   {
 455              		.loc 1 358 7 is_stmt 0 view .LVU142
 456 002a FFF7FEFF 		bl	HAL_SPI_Init
 457              	.LVL10:
 358:Core/Src/main.c ****   {
 458              		.loc 1 358 6 discriminator 1 view .LVU143
 459 002e 00B9     		cbnz	r0, .L23
 366:Core/Src/main.c **** 
 460              		.loc 1 366 1 view .LVU144
 461 0030 08BD     		pop	{r3, pc}
 462              	.L23:
 360:Core/Src/main.c ****   }
ARM GAS  /tmp/ccZ3zwRK.s 			page 21


 463              		.loc 1 360 5 is_stmt 1 view .LVU145
 464 0032 FFF7FEFF 		bl	Error_Handler
 465              	.LVL11:
 466              	.L25:
 467 0036 00BF     		.align	2
 468              	.L24:
 469 0038 00000000 		.word	hspi1
 470 003c 00300140 		.word	1073819648
 471              		.cfi_endproc
 472              	.LFE135:
 474              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 475              		.align	1
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 480              	MX_USART1_UART_Init:
 481              	.LFB136:
 374:Core/Src/main.c **** 
 482              		.loc 1 374 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486 0000 08B5     		push	{r3, lr}
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 3, -8
 489              		.cfi_offset 14, -4
 383:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 490              		.loc 1 383 3 view .LVU147
 383:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 491              		.loc 1 383 19 is_stmt 0 view .LVU148
 492 0002 0B48     		ldr	r0, .L30
 493 0004 0B4B     		ldr	r3, .L30+4
 494 0006 0360     		str	r3, [r0]
 384:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 495              		.loc 1 384 3 is_stmt 1 view .LVU149
 384:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 496              		.loc 1 384 24 is_stmt 0 view .LVU150
 497 0008 4FF4E133 		mov	r3, #115200
 498 000c 4360     		str	r3, [r0, #4]
 385:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 499              		.loc 1 385 3 is_stmt 1 view .LVU151
 385:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 500              		.loc 1 385 26 is_stmt 0 view .LVU152
 501 000e 0023     		movs	r3, #0
 502 0010 8360     		str	r3, [r0, #8]
 386:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 503              		.loc 1 386 3 is_stmt 1 view .LVU153
 386:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 504              		.loc 1 386 24 is_stmt 0 view .LVU154
 505 0012 C360     		str	r3, [r0, #12]
 387:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 506              		.loc 1 387 3 is_stmt 1 view .LVU155
 387:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 507              		.loc 1 387 22 is_stmt 0 view .LVU156
 508 0014 0361     		str	r3, [r0, #16]
 388:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 509              		.loc 1 388 3 is_stmt 1 view .LVU157
ARM GAS  /tmp/ccZ3zwRK.s 			page 22


 388:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 510              		.loc 1 388 20 is_stmt 0 view .LVU158
 511 0016 0C22     		movs	r2, #12
 512 0018 4261     		str	r2, [r0, #20]
 389:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 513              		.loc 1 389 3 is_stmt 1 view .LVU159
 389:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 514              		.loc 1 389 25 is_stmt 0 view .LVU160
 515 001a 4FF44072 		mov	r2, #768
 516 001e 8261     		str	r2, [r0, #24]
 390:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 517              		.loc 1 390 3 is_stmt 1 view .LVU161
 390:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 518              		.loc 1 390 28 is_stmt 0 view .LVU162
 519 0020 C361     		str	r3, [r0, #28]
 391:Core/Src/main.c ****   {
 520              		.loc 1 391 3 is_stmt 1 view .LVU163
 391:Core/Src/main.c ****   {
 521              		.loc 1 391 7 is_stmt 0 view .LVU164
 522 0022 FFF7FEFF 		bl	HAL_UART_Init
 523              	.LVL12:
 391:Core/Src/main.c ****   {
 524              		.loc 1 391 6 discriminator 1 view .LVU165
 525 0026 00B9     		cbnz	r0, .L29
 399:Core/Src/main.c **** 
 526              		.loc 1 399 1 view .LVU166
 527 0028 08BD     		pop	{r3, pc}
 528              	.L29:
 393:Core/Src/main.c ****   }
 529              		.loc 1 393 5 is_stmt 1 view .LVU167
 530 002a FFF7FEFF 		bl	Error_Handler
 531              	.LVL13:
 532              	.L31:
 533 002e 00BF     		.align	2
 534              	.L30:
 535 0030 00000000 		.word	huart1
 536 0034 00100140 		.word	1073811456
 537              		.cfi_endproc
 538              	.LFE136:
 540              		.section	.text.MX_RTC_Init,"ax",%progbits
 541              		.align	1
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 546              	MX_RTC_Init:
 547              	.LFB134:
 253:Core/Src/main.c **** 
 548              		.loc 1 253 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 64
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 10B5     		push	{r4, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 4, -8
 555              		.cfi_offset 14, -4
 556 0002 90B0     		sub	sp, sp, #64
 557              		.cfi_def_cfa_offset 72
ARM GAS  /tmp/ccZ3zwRK.s 			page 23


 259:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 558              		.loc 1 259 3 view .LVU169
 259:Core/Src/main.c ****   RTC_DateTypeDef sDate = {0};
 559              		.loc 1 259 19 is_stmt 0 view .LVU170
 560 0004 0024     		movs	r4, #0
 561 0006 0B94     		str	r4, [sp, #44]
 562 0008 0C94     		str	r4, [sp, #48]
 563 000a 0D94     		str	r4, [sp, #52]
 564 000c 0E94     		str	r4, [sp, #56]
 565 000e 0F94     		str	r4, [sp, #60]
 260:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 566              		.loc 1 260 3 is_stmt 1 view .LVU171
 260:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 567              		.loc 1 260 19 is_stmt 0 view .LVU172
 568 0010 0A94     		str	r4, [sp, #40]
 261:Core/Src/main.c **** 
 569              		.loc 1 261 3 is_stmt 1 view .LVU173
 261:Core/Src/main.c **** 
 570              		.loc 1 261 20 is_stmt 0 view .LVU174
 571 0012 2822     		movs	r2, #40
 572 0014 2146     		mov	r1, r4
 573 0016 6846     		mov	r0, sp
 574 0018 FFF7FEFF 		bl	memset
 575              	.LVL14:
 269:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 576              		.loc 1 269 3 is_stmt 1 view .LVU175
 269:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 577              		.loc 1 269 17 is_stmt 0 view .LVU176
 578 001c 2B48     		ldr	r0, .L42
 579 001e 2C4B     		ldr	r3, .L42+4
 580 0020 0360     		str	r3, [r0]
 270:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 581              		.loc 1 270 3 is_stmt 1 view .LVU177
 270:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 582              		.loc 1 270 24 is_stmt 0 view .LVU178
 583 0022 4460     		str	r4, [r0, #4]
 271:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 584              		.loc 1 271 3 is_stmt 1 view .LVU179
 271:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 585              		.loc 1 271 26 is_stmt 0 view .LVU180
 586 0024 7F23     		movs	r3, #127
 587 0026 8360     		str	r3, [r0, #8]
 272:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_ALARMA;
 588              		.loc 1 272 3 is_stmt 1 view .LVU181
 272:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_ALARMA;
 589              		.loc 1 272 25 is_stmt 0 view .LVU182
 590 0028 FF23     		movs	r3, #255
 591 002a C360     		str	r3, [r0, #12]
 273:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_LOW;
 592              		.loc 1 273 3 is_stmt 1 view .LVU183
 273:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_LOW;
 593              		.loc 1 273 20 is_stmt 0 view .LVU184
 594 002c 4FF40013 		mov	r3, #2097152
 595 0030 0361     		str	r3, [r0, #16]
 274:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_PUSHPULL;
 596              		.loc 1 274 3 is_stmt 1 view .LVU185
 274:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_PUSHPULL;
ARM GAS  /tmp/ccZ3zwRK.s 			page 24


 597              		.loc 1 274 28 is_stmt 0 view .LVU186
 598 0032 4FF48013 		mov	r3, #1048576
 599 0036 4361     		str	r3, [r0, #20]
 275:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 600              		.loc 1 275 3 is_stmt 1 view .LVU187
 275:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 601              		.loc 1 275 24 is_stmt 0 view .LVU188
 602 0038 4FF48023 		mov	r3, #262144
 603 003c 8361     		str	r3, [r0, #24]
 276:Core/Src/main.c ****   {
 604              		.loc 1 276 3 is_stmt 1 view .LVU189
 276:Core/Src/main.c ****   {
 605              		.loc 1 276 7 is_stmt 0 view .LVU190
 606 003e FFF7FEFF 		bl	HAL_RTC_Init
 607              	.LVL15:
 276:Core/Src/main.c ****   {
 608              		.loc 1 276 6 discriminator 1 view .LVU191
 609 0042 0028     		cmp	r0, #0
 610 0044 39D1     		bne	.L38
 287:Core/Src/main.c ****   sTime.Minutes = 0x0;
 611              		.loc 1 287 3 is_stmt 1 view .LVU192
 287:Core/Src/main.c ****   sTime.Minutes = 0x0;
 612              		.loc 1 287 15 is_stmt 0 view .LVU193
 613 0046 0023     		movs	r3, #0
 614 0048 8DF82C30 		strb	r3, [sp, #44]
 288:Core/Src/main.c ****   sTime.Seconds = 0x0;
 615              		.loc 1 288 3 is_stmt 1 view .LVU194
 288:Core/Src/main.c ****   sTime.Seconds = 0x0;
 616              		.loc 1 288 17 is_stmt 0 view .LVU195
 617 004c 8DF82D30 		strb	r3, [sp, #45]
 289:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 618              		.loc 1 289 3 is_stmt 1 view .LVU196
 289:Core/Src/main.c ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 619              		.loc 1 289 17 is_stmt 0 view .LVU197
 620 0050 8DF82E30 		strb	r3, [sp, #46]
 290:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 621              		.loc 1 290 3 is_stmt 1 view .LVU198
 290:Core/Src/main.c ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 622              		.loc 1 290 24 is_stmt 0 view .LVU199
 623 0054 0E93     		str	r3, [sp, #56]
 291:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 624              		.loc 1 291 3 is_stmt 1 view .LVU200
 291:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 625              		.loc 1 291 24 is_stmt 0 view .LVU201
 626 0056 0F93     		str	r3, [sp, #60]
 292:Core/Src/main.c ****   {
 627              		.loc 1 292 3 is_stmt 1 view .LVU202
 292:Core/Src/main.c ****   {
 628              		.loc 1 292 7 is_stmt 0 view .LVU203
 629 0058 0122     		movs	r2, #1
 630 005a 0BA9     		add	r1, sp, #44
 631 005c 1B48     		ldr	r0, .L42
 632 005e FFF7FEFF 		bl	HAL_RTC_SetTime
 633              	.LVL16:
 292:Core/Src/main.c ****   {
 634              		.loc 1 292 6 discriminator 1 view .LVU204
 635 0062 60BB     		cbnz	r0, .L39
ARM GAS  /tmp/ccZ3zwRK.s 			page 25


 296:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 636              		.loc 1 296 3 is_stmt 1 view .LVU205
 296:Core/Src/main.c ****   sDate.Month = RTC_MONTH_JANUARY;
 637              		.loc 1 296 17 is_stmt 0 view .LVU206
 638 0064 0122     		movs	r2, #1
 639 0066 8DF82820 		strb	r2, [sp, #40]
 297:Core/Src/main.c ****   sDate.Date = 0x1;
 640              		.loc 1 297 3 is_stmt 1 view .LVU207
 297:Core/Src/main.c ****   sDate.Date = 0x1;
 641              		.loc 1 297 15 is_stmt 0 view .LVU208
 642 006a 8DF82920 		strb	r2, [sp, #41]
 298:Core/Src/main.c ****   sDate.Year = 0x0;
 643              		.loc 1 298 3 is_stmt 1 view .LVU209
 298:Core/Src/main.c ****   sDate.Year = 0x0;
 644              		.loc 1 298 14 is_stmt 0 view .LVU210
 645 006e 8DF82A20 		strb	r2, [sp, #42]
 299:Core/Src/main.c **** 
 646              		.loc 1 299 3 is_stmt 1 view .LVU211
 299:Core/Src/main.c **** 
 647              		.loc 1 299 14 is_stmt 0 view .LVU212
 648 0072 0023     		movs	r3, #0
 649 0074 8DF82B30 		strb	r3, [sp, #43]
 301:Core/Src/main.c ****   {
 650              		.loc 1 301 3 is_stmt 1 view .LVU213
 301:Core/Src/main.c ****   {
 651              		.loc 1 301 7 is_stmt 0 view .LVU214
 652 0078 0AA9     		add	r1, sp, #40
 653 007a 1448     		ldr	r0, .L42
 654 007c FFF7FEFF 		bl	HAL_RTC_SetDate
 655              	.LVL17:
 301:Core/Src/main.c ****   {
 656              		.loc 1 301 6 discriminator 1 view .LVU215
 657 0080 F8B9     		cbnz	r0, .L40
 308:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = 0x0;
 658              		.loc 1 308 3 is_stmt 1 view .LVU216
 308:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = 0x0;
 659              		.loc 1 308 26 is_stmt 0 view .LVU217
 660 0082 0023     		movs	r3, #0
 661 0084 8DF80030 		strb	r3, [sp]
 309:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = 0x10;
 662              		.loc 1 309 3 is_stmt 1 view .LVU218
 309:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = 0x10;
 663              		.loc 1 309 28 is_stmt 0 view .LVU219
 664 0088 8DF80130 		strb	r3, [sp, #1]
 310:Core/Src/main.c ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 665              		.loc 1 310 3 is_stmt 1 view .LVU220
 310:Core/Src/main.c ****   sAlarm.AlarmTime.SubSeconds = 0x0;
 666              		.loc 1 310 28 is_stmt 0 view .LVU221
 667 008c 1022     		movs	r2, #16
 668 008e 8DF80220 		strb	r2, [sp, #2]
 311:Core/Src/main.c ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 669              		.loc 1 311 3 is_stmt 1 view .LVU222
 311:Core/Src/main.c ****   sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 670              		.loc 1 311 31 is_stmt 0 view .LVU223
 671 0092 0193     		str	r3, [sp, #4]
 312:Core/Src/main.c ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 672              		.loc 1 312 3 is_stmt 1 view .LVU224
ARM GAS  /tmp/ccZ3zwRK.s 			page 26


 312:Core/Src/main.c ****   sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 673              		.loc 1 312 35 is_stmt 0 view .LVU225
 674 0094 0393     		str	r3, [sp, #12]
 313:Core/Src/main.c ****   sAlarm.AlarmMask = RTC_ALARMMASK_DATEWEEKDAY|RTC_ALARMMASK_HOURS
 675              		.loc 1 313 3 is_stmt 1 view .LVU226
 313:Core/Src/main.c ****   sAlarm.AlarmMask = RTC_ALARMMASK_DATEWEEKDAY|RTC_ALARMMASK_HOURS
 676              		.loc 1 313 35 is_stmt 0 view .LVU227
 677 0096 0493     		str	r3, [sp, #16]
 314:Core/Src/main.c ****                               |RTC_ALARMMASK_MINUTES;
 678              		.loc 1 314 3 is_stmt 1 view .LVU228
 314:Core/Src/main.c ****                               |RTC_ALARMMASK_MINUTES;
 679              		.loc 1 314 20 is_stmt 0 view .LVU229
 680 0098 0E4A     		ldr	r2, .L42+8
 681 009a 0592     		str	r2, [sp, #20]
 316:Core/Src/main.c ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 682              		.loc 1 316 3 is_stmt 1 view .LVU230
 316:Core/Src/main.c ****   sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 683              		.loc 1 316 29 is_stmt 0 view .LVU231
 684 009c 0693     		str	r3, [sp, #24]
 317:Core/Src/main.c ****   sAlarm.AlarmDateWeekDay = 0x1;
 685              		.loc 1 317 3 is_stmt 1 view .LVU232
 317:Core/Src/main.c ****   sAlarm.AlarmDateWeekDay = 0x1;
 686              		.loc 1 317 30 is_stmt 0 view .LVU233
 687 009e 0793     		str	r3, [sp, #28]
 318:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 688              		.loc 1 318 3 is_stmt 1 view .LVU234
 318:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 689              		.loc 1 318 27 is_stmt 0 view .LVU235
 690 00a0 0122     		movs	r2, #1
 691 00a2 8DF82020 		strb	r2, [sp, #32]
 319:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 692              		.loc 1 319 3 is_stmt 1 view .LVU236
 319:Core/Src/main.c ****   if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 693              		.loc 1 319 16 is_stmt 0 view .LVU237
 694 00a6 4FF48073 		mov	r3, #256
 695 00aa 0993     		str	r3, [sp, #36]
 320:Core/Src/main.c ****   {
 696              		.loc 1 320 3 is_stmt 1 view .LVU238
 320:Core/Src/main.c ****   {
 697              		.loc 1 320 7 is_stmt 0 view .LVU239
 698 00ac 6946     		mov	r1, sp
 699 00ae 0748     		ldr	r0, .L42
 700 00b0 FFF7FEFF 		bl	HAL_RTC_SetAlarm
 701              	.LVL18:
 320:Core/Src/main.c ****   {
 702              		.loc 1 320 6 discriminator 1 view .LVU240
 703 00b4 38B9     		cbnz	r0, .L41
 328:Core/Src/main.c **** 
 704              		.loc 1 328 1 view .LVU241
 705 00b6 10B0     		add	sp, sp, #64
 706              		.cfi_remember_state
 707              		.cfi_def_cfa_offset 8
 708              		@ sp needed
 709 00b8 10BD     		pop	{r4, pc}
 710              	.L38:
 711              		.cfi_restore_state
 278:Core/Src/main.c ****   }
ARM GAS  /tmp/ccZ3zwRK.s 			page 27


 712              		.loc 1 278 5 is_stmt 1 view .LVU242
 713 00ba FFF7FEFF 		bl	Error_Handler
 714              	.LVL19:
 715              	.L39:
 294:Core/Src/main.c ****   }
 716              		.loc 1 294 5 view .LVU243
 717 00be FFF7FEFF 		bl	Error_Handler
 718              	.LVL20:
 719              	.L40:
 303:Core/Src/main.c ****   }
 720              		.loc 1 303 5 view .LVU244
 721 00c2 FFF7FEFF 		bl	Error_Handler
 722              	.LVL21:
 723              	.L41:
 322:Core/Src/main.c ****   }
 724              		.loc 1 322 5 view .LVU245
 725 00c6 FFF7FEFF 		bl	Error_Handler
 726              	.LVL22:
 727              	.L43:
 728 00ca 00BF     		.align	2
 729              	.L42:
 730 00cc 00000000 		.word	hrtc
 731 00d0 00280040 		.word	1073752064
 732 00d4 00808080 		.word	-2139062272
 733              		.cfi_endproc
 734              	.LFE134:
 736              		.section	.text.SystemClock_Config,"ax",%progbits
 737              		.align	1
 738              		.global	SystemClock_Config
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 743              	SystemClock_Config:
 744              	.LFB131:
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 745              		.loc 1 134 1 view -0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 80
 748              		@ frame_needed = 0, uses_anonymous_args = 0
 749 0000 00B5     		push	{lr}
 750              		.cfi_def_cfa_offset 4
 751              		.cfi_offset 14, -4
 752 0002 95B0     		sub	sp, sp, #84
 753              		.cfi_def_cfa_offset 88
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 754              		.loc 1 135 3 view .LVU247
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 755              		.loc 1 135 22 is_stmt 0 view .LVU248
 756 0004 3022     		movs	r2, #48
 757 0006 0021     		movs	r1, #0
 758 0008 08A8     		add	r0, sp, #32
 759 000a FFF7FEFF 		bl	memset
 760              	.LVL23:
 136:Core/Src/main.c **** 
 761              		.loc 1 136 3 is_stmt 1 view .LVU249
 136:Core/Src/main.c **** 
 762              		.loc 1 136 22 is_stmt 0 view .LVU250
ARM GAS  /tmp/ccZ3zwRK.s 			page 28


 763 000e 0023     		movs	r3, #0
 764 0010 0393     		str	r3, [sp, #12]
 765 0012 0493     		str	r3, [sp, #16]
 766 0014 0593     		str	r3, [sp, #20]
 767 0016 0693     		str	r3, [sp, #24]
 768 0018 0793     		str	r3, [sp, #28]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 769              		.loc 1 140 3 is_stmt 1 view .LVU251
 770              	.LBB10:
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 771              		.loc 1 140 3 view .LVU252
 772 001a 0193     		str	r3, [sp, #4]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 773              		.loc 1 140 3 view .LVU253
 774 001c 254A     		ldr	r2, .L50
 775 001e 116C     		ldr	r1, [r2, #64]
 776 0020 41F08051 		orr	r1, r1, #268435456
 777 0024 1164     		str	r1, [r2, #64]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 778              		.loc 1 140 3 view .LVU254
 779 0026 126C     		ldr	r2, [r2, #64]
 780 0028 02F08052 		and	r2, r2, #268435456
 781 002c 0192     		str	r2, [sp, #4]
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 782              		.loc 1 140 3 view .LVU255
 783 002e 019A     		ldr	r2, [sp, #4]
 784              	.LBE10:
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 785              		.loc 1 140 3 view .LVU256
 141:Core/Src/main.c **** 
 786              		.loc 1 141 3 view .LVU257
 787              	.LBB11:
 141:Core/Src/main.c **** 
 788              		.loc 1 141 3 view .LVU258
 789 0030 0293     		str	r3, [sp, #8]
 141:Core/Src/main.c **** 
 790              		.loc 1 141 3 view .LVU259
 791 0032 214A     		ldr	r2, .L50+4
 792 0034 1368     		ldr	r3, [r2]
 793 0036 23F44043 		bic	r3, r3, #49152
 794 003a 43F40043 		orr	r3, r3, #32768
 795 003e 1360     		str	r3, [r2]
 141:Core/Src/main.c **** 
 796              		.loc 1 141 3 view .LVU260
 797 0040 1368     		ldr	r3, [r2]
 798 0042 03F44043 		and	r3, r3, #49152
 799 0046 0293     		str	r3, [sp, #8]
 141:Core/Src/main.c **** 
 800              		.loc 1 141 3 view .LVU261
 801 0048 029B     		ldr	r3, [sp, #8]
 802              	.LBE11:
 141:Core/Src/main.c **** 
 803              		.loc 1 141 3 view .LVU262
 146:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSE;
 804              		.loc 1 146 3 view .LVU263
 146:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSE;
 805              		.loc 1 146 36 is_stmt 0 view .LVU264
ARM GAS  /tmp/ccZ3zwRK.s 			page 29


 806 004a 0B23     		movs	r3, #11
 807 004c 0893     		str	r3, [sp, #32]
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 808              		.loc 1 148 3 is_stmt 1 view .LVU265
 148:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 809              		.loc 1 148 30 is_stmt 0 view .LVU266
 810 004e 4FF48033 		mov	r3, #65536
 811 0052 0993     		str	r3, [sp, #36]
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 812              		.loc 1 149 3 is_stmt 1 view .LVU267
 149:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 813              		.loc 1 149 30 is_stmt 0 view .LVU268
 814 0054 0123     		movs	r3, #1
 815 0056 0B93     		str	r3, [sp, #44]
 150:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 816              		.loc 1 150 3 is_stmt 1 view .LVU269
 150:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 817              		.loc 1 150 41 is_stmt 0 view .LVU270
 818 0058 1022     		movs	r2, #16
 819 005a 0C92     		str	r2, [sp, #48]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 820              		.loc 1 151 3 is_stmt 1 view .LVU271
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 821              		.loc 1 151 30 is_stmt 0 view .LVU272
 822 005c 0D93     		str	r3, [sp, #52]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 823              		.loc 1 152 3 is_stmt 1 view .LVU273
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 824              		.loc 1 152 34 is_stmt 0 view .LVU274
 825 005e 0223     		movs	r3, #2
 826 0060 0E93     		str	r3, [sp, #56]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 827              		.loc 1 153 3 is_stmt 1 view .LVU275
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 828              		.loc 1 153 35 is_stmt 0 view .LVU276
 829 0062 4FF48002 		mov	r2, #4194304
 830 0066 0F92     		str	r2, [sp, #60]
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 831              		.loc 1 154 3 is_stmt 1 view .LVU277
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 832              		.loc 1 154 30 is_stmt 0 view .LVU278
 833 0068 1922     		movs	r2, #25
 834 006a 1092     		str	r2, [sp, #64]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 835              		.loc 1 155 3 is_stmt 1 view .LVU279
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 836              		.loc 1 155 30 is_stmt 0 view .LVU280
 837 006c A822     		movs	r2, #168
 838 006e 1192     		str	r2, [sp, #68]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 839              		.loc 1 156 3 is_stmt 1 view .LVU281
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 840              		.loc 1 156 30 is_stmt 0 view .LVU282
 841 0070 1293     		str	r3, [sp, #72]
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 842              		.loc 1 157 3 is_stmt 1 view .LVU283
 157:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /tmp/ccZ3zwRK.s 			page 30


 843              		.loc 1 157 30 is_stmt 0 view .LVU284
 844 0072 0423     		movs	r3, #4
 845 0074 1393     		str	r3, [sp, #76]
 158:Core/Src/main.c ****   {
 846              		.loc 1 158 3 is_stmt 1 view .LVU285
 158:Core/Src/main.c ****   {
 847              		.loc 1 158 7 is_stmt 0 view .LVU286
 848 0076 08A8     		add	r0, sp, #32
 849 0078 FFF7FEFF 		bl	HAL_RCC_OscConfig
 850              	.LVL24:
 158:Core/Src/main.c ****   {
 851              		.loc 1 158 6 discriminator 1 view .LVU287
 852 007c A8B9     		cbnz	r0, .L48
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 853              		.loc 1 165 3 is_stmt 1 view .LVU288
 165:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 854              		.loc 1 165 31 is_stmt 0 view .LVU289
 855 007e 0F23     		movs	r3, #15
 856 0080 0393     		str	r3, [sp, #12]
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 857              		.loc 1 167 3 is_stmt 1 view .LVU290
 167:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 858              		.loc 1 167 34 is_stmt 0 view .LVU291
 859 0082 0221     		movs	r1, #2
 860 0084 0491     		str	r1, [sp, #16]
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 861              		.loc 1 168 3 is_stmt 1 view .LVU292
 168:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 862              		.loc 1 168 35 is_stmt 0 view .LVU293
 863 0086 0023     		movs	r3, #0
 864 0088 0593     		str	r3, [sp, #20]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 865              		.loc 1 169 3 is_stmt 1 view .LVU294
 169:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 866              		.loc 1 169 36 is_stmt 0 view .LVU295
 867 008a 4FF48052 		mov	r2, #4096
 868 008e 0692     		str	r2, [sp, #24]
 170:Core/Src/main.c **** 
 869              		.loc 1 170 3 is_stmt 1 view .LVU296
 170:Core/Src/main.c **** 
 870              		.loc 1 170 36 is_stmt 0 view .LVU297
 871 0090 0793     		str	r3, [sp, #28]
 172:Core/Src/main.c ****   {
 872              		.loc 1 172 3 is_stmt 1 view .LVU298
 172:Core/Src/main.c ****   {
 873              		.loc 1 172 7 is_stmt 0 view .LVU299
 874 0092 03A8     		add	r0, sp, #12
 875 0094 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 876              	.LVL25:
 172:Core/Src/main.c ****   {
 877              		.loc 1 172 6 discriminator 1 view .LVU300
 878 0098 48B9     		cbnz	r0, .L49
 176:Core/Src/main.c **** }
 879              		.loc 1 176 3 is_stmt 1 view .LVU301
 880 009a 0022     		movs	r2, #0
 881 009c 1146     		mov	r1, r2
 882 009e 1046     		mov	r0, r2
ARM GAS  /tmp/ccZ3zwRK.s 			page 31


 883 00a0 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 884              	.LVL26:
 177:Core/Src/main.c **** 
 885              		.loc 1 177 1 is_stmt 0 view .LVU302
 886 00a4 15B0     		add	sp, sp, #84
 887              		.cfi_remember_state
 888              		.cfi_def_cfa_offset 4
 889              		@ sp needed
 890 00a6 5DF804FB 		ldr	pc, [sp], #4
 891              	.L48:
 892              		.cfi_restore_state
 160:Core/Src/main.c ****   }
 893              		.loc 1 160 5 is_stmt 1 view .LVU303
 894 00aa FFF7FEFF 		bl	Error_Handler
 895              	.LVL27:
 896              	.L49:
 174:Core/Src/main.c ****   }
 897              		.loc 1 174 5 view .LVU304
 898 00ae FFF7FEFF 		bl	Error_Handler
 899              	.LVL28:
 900              	.L51:
 901 00b2 00BF     		.align	2
 902              	.L50:
 903 00b4 00380240 		.word	1073887232
 904 00b8 00700040 		.word	1073770496
 905              		.cfi_endproc
 906              	.LFE131:
 908              		.section	.text.main,"ax",%progbits
 909              		.align	1
 910              		.global	main
 911              		.syntax unified
 912              		.thumb
 913              		.thumb_func
 915              	main:
 916              	.LFB130:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 917              		.loc 1 79 1 view -0
 918              		.cfi_startproc
 919              		@ Volatile: function does not return.
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922 0000 08B5     		push	{r3, lr}
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 3, -8
 925              		.cfi_offset 14, -4
  87:Core/Src/main.c **** 
 926              		.loc 1 87 3 view .LVU306
 927 0002 FFF7FEFF 		bl	HAL_Init
 928              	.LVL29:
  94:Core/Src/main.c **** 
 929              		.loc 1 94 3 view .LVU307
 930 0006 FFF7FEFF 		bl	SystemClock_Config
 931              	.LVL30:
 101:Core/Src/main.c ****   MX_I2C1_Init();
 932              		.loc 1 101 3 view .LVU308
 933 000a FFF7FEFF 		bl	MX_GPIO_Init
 934              	.LVL31:
ARM GAS  /tmp/ccZ3zwRK.s 			page 32


 102:Core/Src/main.c ****   MX_I2S2_Init();
 935              		.loc 1 102 3 view .LVU309
 936 000e FFF7FEFF 		bl	MX_I2C1_Init
 937              	.LVL32:
 103:Core/Src/main.c ****   MX_SPI1_Init();
 938              		.loc 1 103 3 view .LVU310
 939 0012 FFF7FEFF 		bl	MX_I2S2_Init
 940              	.LVL33:
 104:Core/Src/main.c ****   MX_USART1_UART_Init();
 941              		.loc 1 104 3 view .LVU311
 942 0016 FFF7FEFF 		bl	MX_SPI1_Init
 943              	.LVL34:
 105:Core/Src/main.c ****   MX_RTC_Init();
 944              		.loc 1 105 3 view .LVU312
 945 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 946              	.LVL35:
 106:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 947              		.loc 1 106 3 view .LVU313
 948 001e FFF7FEFF 		bl	MX_RTC_Init
 949              	.LVL36:
 950              	.L53:
 118:Core/Src/main.c ****   {
 951              		.loc 1 118 3 view .LVU314
 124:Core/Src/main.c ****   
 952              		.loc 1 124 3 view .LVU315
 118:Core/Src/main.c ****   {
 953              		.loc 1 118 9 view .LVU316
 954 0022 FEE7     		b	.L53
 955              		.cfi_endproc
 956              	.LFE130:
 958              		.global	state_alrm
 959              		.section	.bss.state_alrm,"aw",%nobits
 962              	state_alrm:
 963 0000 00       		.space	1
 964              		.global	huart1
 965              		.section	.bss.huart1,"aw",%nobits
 966              		.align	2
 969              	huart1:
 970 0000 00000000 		.space	68
 970      00000000 
 970      00000000 
 970      00000000 
 970      00000000 
 971              		.global	hspi1
 972              		.section	.bss.hspi1,"aw",%nobits
 973              		.align	2
 976              	hspi1:
 977 0000 00000000 		.space	88
 977      00000000 
 977      00000000 
 977      00000000 
 977      00000000 
 978              		.global	hrtc
 979              		.section	.bss.hrtc,"aw",%nobits
 980              		.align	2
 983              	hrtc:
 984 0000 00000000 		.space	32
ARM GAS  /tmp/ccZ3zwRK.s 			page 33


 984      00000000 
 984      00000000 
 984      00000000 
 984      00000000 
 985              		.global	hi2s2
 986              		.section	.bss.hi2s2,"aw",%nobits
 987              		.align	2
 990              	hi2s2:
 991 0000 00000000 		.space	72
 991      00000000 
 991      00000000 
 991      00000000 
 991      00000000 
 992              		.global	hi2c1
 993              		.section	.bss.hi2c1,"aw",%nobits
 994              		.align	2
 997              	hi2c1:
 998 0000 00000000 		.space	84
 998      00000000 
 998      00000000 
 998      00000000 
 998      00000000 
 999              		.text
 1000              	.Letext0:
 1001              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1002              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1003              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xc.h"
 1004              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1005              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1006              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1007              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1008              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1009              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1010              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 1011              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rtc.h"
 1012              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1013              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1014              		.file 16 "Core/Inc/main.h"
 1015              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1016              		.file 18 "<built-in>"
ARM GAS  /tmp/ccZ3zwRK.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccZ3zwRK.s:21     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccZ3zwRK.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccZ3zwRK.s:195    .text.MX_GPIO_Init:000000c0 $d
     /tmp/ccZ3zwRK.s:202    .text.HAL_RTC_AlarmAEventCallback:00000000 $t
     /tmp/ccZ3zwRK.s:208    .text.HAL_RTC_AlarmAEventCallback:00000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccZ3zwRK.s:222    .text.Error_Handler:00000000 $t
     /tmp/ccZ3zwRK.s:228    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccZ3zwRK.s:260    .text.MX_I2C1_Init:00000000 $t
     /tmp/ccZ3zwRK.s:265    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
     /tmp/ccZ3zwRK.s:322    .text.MX_I2C1_Init:0000002c $d
     /tmp/ccZ3zwRK.s:997    .bss.hi2c1:00000000 hi2c1
     /tmp/ccZ3zwRK.s:329    .text.MX_I2S2_Init:00000000 $t
     /tmp/ccZ3zwRK.s:334    .text.MX_I2S2_Init:00000000 MX_I2S2_Init
     /tmp/ccZ3zwRK.s:391    .text.MX_I2S2_Init:00000030 $d
     /tmp/ccZ3zwRK.s:990    .bss.hi2s2:00000000 hi2s2
     /tmp/ccZ3zwRK.s:397    .text.MX_SPI1_Init:00000000 $t
     /tmp/ccZ3zwRK.s:402    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/ccZ3zwRK.s:469    .text.MX_SPI1_Init:00000038 $d
     /tmp/ccZ3zwRK.s:976    .bss.hspi1:00000000 hspi1
     /tmp/ccZ3zwRK.s:475    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccZ3zwRK.s:480    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccZ3zwRK.s:535    .text.MX_USART1_UART_Init:00000030 $d
     /tmp/ccZ3zwRK.s:969    .bss.huart1:00000000 huart1
     /tmp/ccZ3zwRK.s:541    .text.MX_RTC_Init:00000000 $t
     /tmp/ccZ3zwRK.s:546    .text.MX_RTC_Init:00000000 MX_RTC_Init
     /tmp/ccZ3zwRK.s:730    .text.MX_RTC_Init:000000cc $d
     /tmp/ccZ3zwRK.s:983    .bss.hrtc:00000000 hrtc
     /tmp/ccZ3zwRK.s:737    .text.SystemClock_Config:00000000 $t
     /tmp/ccZ3zwRK.s:743    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccZ3zwRK.s:903    .text.SystemClock_Config:000000b4 $d
     /tmp/ccZ3zwRK.s:909    .text.main:00000000 $t
     /tmp/ccZ3zwRK.s:915    .text.main:00000000 main
     /tmp/ccZ3zwRK.s:962    .bss.state_alrm:00000000 state_alrm
     /tmp/ccZ3zwRK.s:963    .bss.state_alrm:00000000 $d
     /tmp/ccZ3zwRK.s:966    .bss.huart1:00000000 $d
     /tmp/ccZ3zwRK.s:973    .bss.hspi1:00000000 $d
     /tmp/ccZ3zwRK.s:980    .bss.hrtc:00000000 $d
     /tmp/ccZ3zwRK.s:987    .bss.hi2s2:00000000 $d
     /tmp/ccZ3zwRK.s:994    .bss.hi2c1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_I2S_Init
HAL_SPI_Init
HAL_UART_Init
memset
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTC_SetAlarm
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
ARM GAS  /tmp/ccZ3zwRK.s 			page 35


HAL_Init
